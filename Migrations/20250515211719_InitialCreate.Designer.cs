// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portal_agile.Data;

#nullable disable

namespace portal_agile.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250515211719_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("portal_agile.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Description = "HR Department",
                            Name = "Human Resources"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Description = "IT Department",
                            Name = "Information Technology"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Description = "Finance Department",
                            Name = "Finance"
                        });
                });

            modelBuilder.Entity("portal_agile.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.HasIndex("ManagerId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("portal_agile.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("portal_agile.Security.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PermissionId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Permissions", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            Code = "USERS.VIEW",
                            Description = "Can view user list",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "UserManagement",
                            Name = "View Users"
                        },
                        new
                        {
                            PermissionId = 2,
                            Code = "USERS.CREATE",
                            Description = "Can create new users",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "UserManagement",
                            Name = "Create Users"
                        },
                        new
                        {
                            PermissionId = 3,
                            Code = "USERS.EDIT",
                            Description = "Can edit existing users",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "UserManagement",
                            Name = "Edit Users"
                        },
                        new
                        {
                            PermissionId = 4,
                            Code = "USERS.DELETE",
                            Description = "Can delete users",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "UserManagement",
                            Name = "Delete Users"
                        },
                        new
                        {
                            PermissionId = 5,
                            Code = "ROLES.VIEW",
                            Description = "Can view role list",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "RoleManagement",
                            Name = "View Roles"
                        },
                        new
                        {
                            PermissionId = 6,
                            Code = "ROLES.CREATE",
                            Description = "Can create new roles",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "RoleManagement",
                            Name = "Create Roles"
                        },
                        new
                        {
                            PermissionId = 7,
                            Code = "ROLES.EDIT",
                            Description = "Can edit existing roles",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "RoleManagement",
                            Name = "Edit Roles"
                        },
                        new
                        {
                            PermissionId = 8,
                            Code = "ROLES.DELETE",
                            Description = "Can delete roles",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "RoleManagement",
                            Name = "Delete Roles"
                        },
                        new
                        {
                            PermissionId = 9,
                            Code = "EMPLOYEES.VIEW",
                            Description = "Can view employee list",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "EmployeeManagement",
                            Name = "View Employees"
                        },
                        new
                        {
                            PermissionId = 10,
                            Code = "EMPLOYEES.CREATE",
                            Description = "Can create new employees",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "EmployeeManagement",
                            Name = "Create Employees"
                        },
                        new
                        {
                            PermissionId = 11,
                            Code = "EMPLOYEES.EDIT",
                            Description = "Can edit existing employees",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "EmployeeManagement",
                            Name = "Edit Employees"
                        },
                        new
                        {
                            PermissionId = 12,
                            Code = "EMPLOYEES.DELETE",
                            Description = "Can delete employees",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "EmployeeManagement",
                            Name = "Delete Employees"
                        },
                        new
                        {
                            PermissionId = 13,
                            Code = "DEPARTMENTS.VIEW",
                            Description = "Can view department list",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "DepartmentManagement",
                            Name = "View Departments"
                        },
                        new
                        {
                            PermissionId = 14,
                            Code = "DEPARTMENTS.CREATE",
                            Description = "Can create new departments",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "DepartmentManagement",
                            Name = "Create Departments"
                        },
                        new
                        {
                            PermissionId = 15,
                            Code = "DEPARTMENTS.EDIT",
                            Description = "Can edit existing departments",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "DepartmentManagement",
                            Name = "Edit Departments"
                        },
                        new
                        {
                            PermissionId = 16,
                            Code = "DEPARTMENTS.DELETE",
                            Description = "Can delete departments",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "DepartmentManagement",
                            Name = "Delete Departments"
                        },
                        new
                        {
                            PermissionId = 17,
                            Code = "PERMISSIONS.VIEW",
                            Description = "Can view permission list",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "PermissionManagement",
                            Name = "View Permissions"
                        },
                        new
                        {
                            PermissionId = 18,
                            Code = "PERMISSIONS.ASSIGN",
                            Description = "Can assign permissions to roles",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "PermissionManagement",
                            Name = "Assign Permissions"
                        },
                        new
                        {
                            PermissionId = 19,
                            Code = "SYSTEM.SETTINGS",
                            Description = "Can change system settings",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "SystemAdministration",
                            Name = "System Settings"
                        },
                        new
                        {
                            PermissionId = 20,
                            Code = "SYSTEM.AUDIT",
                            Description = "Can view system audit logs",
                            IsActive = true,
                            IsDeleted = false,
                            Module = "SystemAdministration",
                            Name = "View Audit Logs"
                        });
                });

            modelBuilder.Entity("portal_agile.Security.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystemRole")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Super Administrator with full access to all system functions",
                            IsDeleted = false,
                            IsSystemRole = true,
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = "2",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Administrator with access to most system functions",
                            IsDeleted = false,
                            IsSystemRole = true,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("portal_agile.Security.RolePermission", b =>
                {
                    b.Property<int>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RolePermissionId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("RolePermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions", (string)null);

                    b.HasData(
                        new
                        {
                            RolePermissionId = 21,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 1,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 22,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 2,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 23,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 3,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 24,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 4,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 25,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 5,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 26,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 6,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 27,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 7,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 28,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 8,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 29,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 9,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 30,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 10,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 31,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 11,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 32,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 12,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 33,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 13,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 34,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 14,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 35,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 15,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 36,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 16,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 37,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 17,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 38,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 18,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 39,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 19,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 40,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 20,
                            RoleId = "1"
                        },
                        new
                        {
                            RolePermissionId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 1,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 2,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 3,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 4,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 4,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 5,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 6,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 6,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 7,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 7,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 8,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 8,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 9,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 9,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 10,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 10,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 11,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 11,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 12,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 12,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 13,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 13,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 14,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 14,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 15,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 15,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 16,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 16,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 17,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 17,
                            RoleId = "2"
                        },
                        new
                        {
                            RolePermissionId = 18,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PermissionId = 18,
                            RoleId = "2"
                        });
                });

            modelBuilder.Entity("portal_agile.Security.UserPermission", b =>
                {
                    b.Property<int>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserPermissionId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserPermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("portal_agile.Security.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("portal_agile.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("portal_agile.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("portal_agile.Security.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portal_agile.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("portal_agile.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("portal_agile.Models.Employee", b =>
                {
                    b.HasOne("portal_agile.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("portal_agile.Models.Employee", "Manager")
                        .WithMany("DirectReports")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("portal_agile.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("portal_agile.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Manager");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portal_agile.Security.RolePermission", b =>
                {
                    b.HasOne("portal_agile.Security.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portal_agile.Security.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("portal_agile.Security.UserPermission", b =>
                {
                    b.HasOne("portal_agile.Security.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portal_agile.Models.User", "User")
                        .WithMany("DirectPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portal_agile.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("portal_agile.Models.Employee", b =>
                {
                    b.Navigation("DirectReports");
                });

            modelBuilder.Entity("portal_agile.Models.User", b =>
                {
                    b.Navigation("DirectPermissions");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("portal_agile.Security.Permission", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("portal_agile.Security.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
